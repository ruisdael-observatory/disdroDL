from modules.telegram import ThiesTelegram

import logging
from logging import StreamHandler

thies_lines = '06;0854;2.11;01.01.14;18:59:00;00;00;NP   ;000.000;00;00;NP   ;000.000;000.000;000.000;0000.00;99999;-9.9;100;0.0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;+23;26;1662;4011;2886;258;062;063;+20.3;999;9999;9999;9999;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;00000;00000.000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;000;99999;99999;9999;999;E9;' # pylint: disable=line-too-long
keys = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '521', '522', '523', '524', '525']
matrix_values
thies_lines_empty = ''
thies_lines_partial = '06;0854;2.11;01.01.14;18:59:00;00;00;NP   ;000.000;00;00;NP   ;'

log_handler = StreamHandler()
logger = logging.getLogger('test-log')
logger.addHandler(log_handler)

def test_capture_prefixes_and_data():

    telegram = ThiesTelegram(config_dict=None,
                             telegram_lines=thies_lines,
                             timestamp=None,
                             db_cursor=None,
                             telegram_data={},
                             logger=None)
    telegram.capture_prefixes_and_data()

    data_dictionary = telegram.telegram_data
    #check that all the keys are in the dictionary
    assert list(data_dictionary.keys()) == keys
    #check that values from telegram are populated to dictionary
    assert data_dictionary['5'] == '01.01.14'
    assert data_dictionary['6'] == '18:59:00'
    #check that values for 22x20 matrix are correctly added
    assert data_dictionary['81'] == matrix_values

def test_capture_prefixes_and_data_empty():

    telegram = ThiesTelegram(config_dict=None,
                             telegram_lines=thies_lines_empty,
                             timestamp=None,
                             db_cursor=None,
                             telegram_data={},
                             logger=logger)
    telegram.capture_prefixes_and_data()

    data_dictionary = telegram.telegram_data
    #check that telegram data is empty
    assert len(data_dictionary.keys()) == 0

def test_capture_prefixes_and_data_partial_telegram():

    telegram = ThiesTelegram(config_dict=None,
                             telegram_lines=thies_lines_partial,
                             timestamp=None,
                             db_cursor=None,
                             telegram_data={},
                             logger=logger)
    telegram.capture_prefixes_and_data()

    data_dictionary = telegram.telegram_data
    #check that telegram data dictionary is empty, partial telegrams are not parsed
    assert len(data_dictionary.keys()) == 0

