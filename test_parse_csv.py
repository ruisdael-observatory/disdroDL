# import datetime
# import os
# from pathlib import Path
# import pytest
# from netCDF4 import Dataset
# from cftime import num2date
# from pydantic.v1.utils import deep_update
# from modules.classes import Telegram
# from modules.util_functions import yaml2dict, create_logger
# from parse_disdro_csv import (
#     str2list_by_ndigits,
#     telegram_list2dict,
#     telegram2dict,
#     csv2df
# )


# telegram = '0000.102;0100.87;57;58;-RADZ; RL-;10.681;19588;00060;21513;00059;006;450541;2.11.4;2.11.1;2.21;20.4;0; ;00:01:00;06.11.2023;PAR007;007;010.087;000;020;010;009;00.102;0000.2;0100.87;10.68;0000.41;0000.00;00000062;-9.999;-9.999;01.619;02.578;02.454;02.064;01.848;01.223;01.148;00.821;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;-9.999;00.000;00.000;01.200;01.219;01.814;02.230;02.557;03.000;03.700;03.799;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;00.000;000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001004003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002003001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001006002001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004004002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001002001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001003002001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' # pylint: disable=line-too-long
# telegram_l = ['0000.102', '0100.87', '57', '58', '-RADZ', ' RL-', '10.681', '19588', '00060',
# '21513', '00059','006', '450541', '2.11.4', '2.11.1', '2.21', '20.4', '0', ' ', '00:01:00',
# '06.11.2023', 'PAR007', '007','010.087', '000', '020', '010', '009', '00.102', '0000.2',
# '0100.87', '10.68', '0000.41', '0000.00',
# '00000062', '-9.999', '-9.999', '01.619', '02.578', '02.454', '02.064', '01.848', '01.223', '01.148',
# '00.821', '-9.999', '-9.999', '-9.999', '-9.999', '-9.999', '-9.999', '-9.999', '-9.999', '-9.999',
# '-9.999', '-9.999', '-9.999', '-9.999', '-9.999', '-9.999', '-9.999', '-9.999', '-9.999', '-9.999',
# '-9.999', '-9.999', '-9.999', '00.000', '00.000', '01.200', '01.219', '01.814', '02.230', '02.557',
# '03.000', '03.700', '03.799', '00.000', '00.000', '00.000', '00.000', '00.000', '00.000', '00.000',
# '00.000', '00.000', '00.000', '00.000', '00.000', '00.000', '00.000', '00.000', '00.000', '00.000',
pylint: disable=line-too-long
# telegram_i = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14',
# '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '30', '31', '32',
# '33', '34', '35', '60', '90', '91', '93']


# wd = Path(__file__).parent
# config_dict = yaml2dict(path=wd / 'configs_netcdf' / 'config_general_parsivel.yml')
# config_dict_site = yaml2dict(path=wd / 'configs_netcdf' / 'config_007_CABAUW.yml')
# config_dict = deep_update(config_dict, config_dict_site)
# conf_telegram_fields = config_dict['telegram_fields']  # multivalue fileds have > 1 dimension

# logger = create_logger(log_dir=Path(config_dict['log_dir']),
#                        script_name='tests',
#                        parsivel_name=config_dict['global_attrs']['sensor_name'])


# def test_str2list_by_ndigits():
#     assert str2list_by_ndigits(input="12345678", ndigits=2) == ["12", "34", "56", "78"]
#     assert str2list_by_ndigits(input="0" * 100, ndigits=10) == ['0000000000'] * 10


# def test_telegram_list2dict():
#     telegram_dict = telegram_list2dict(telegram_indeces=telegram_i,
#                                        telegram=telegram.split(';'))
#     assert telegram_dict['01'] == '0000.102'
#     assert telegram_dict['91'] == '00.000,00.000,01.200,01.219,01.814,02.230,02.557,03.000,03.700,03.799,00.000,
#     00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,
#     00.000,00.000,00.000,00.000,00.000,00.000'
#     assert len(telegram_dict['93']) == 3072
#     for i in set(telegram_dict['93']):
#         assert int(i) in range(0, 10)


# def test_telegram2dict():
#     telegram_dict = telegram2dict(telegram=telegram,
#                                   dt=datetime.datetime(2023, 11, 6, 0, 1, 51),
#                                   ts=1699225311.829183, )
#     telegram_i.append('datetime')
#     telegram_i.append('timestamp')
#     for key, val in telegram_dict.items():
#         assert key in telegram_i
#         if key == 'datetime':
#             assert isinstance(val, datetime.datetime)
#         elif key == 'timestamp':
#             assert isinstance(val, float)
#         elif key == '93':
#             assert isinstance(val, str)
#             assert len(val) == 3072
#         else:
#             assert isinstance(val, str)


# @pytest.fixture
# def delete_netcdf():
#     nc_path = Path('sample_data/sample.nc')
#     if os.path.exists(nc_path):
#         os.remove(nc_path)


# @pytest.fixture
# def csv2nc(delete_netcdf):
#     df = csv2df(csv_path='sample_data/sample.csv')
#     for index, csv_row in df.iterrows():
#         telegram_dict = telegram2dict(telegram=csv_row['telegram'],
#                                       dt=csv_row['datetime'],
#                                       ts=csv_row['timestamp'], )
#         telegram = Telegram(config_dict=config_dict,
#                             telegram_lines=None,
#                             telegram_data=telegram_dict,
#                             timestamp=telegram_dict['datetime'],
#                             db_cursor=None,
#                             logger=logger
#                             )
#         telegram.str2list(field='90', separator=',')
#         telegram.str2list(field='91', separator=',')
#         telegram.telegram_data['93'] = str2list_by_ndigits(input=telegram.telegram_data['93'], ndigits=3)
#     return df


# @pytest.fixture
# def read_nc():
#     rootgrp = Dataset('sample_data/sample.nc', 'r', format="NETCDF4")  # read netcdf
#     return rootgrp


# # def test_nc_time(csv2nc, read_nc):
# #     df = csv2nc
# #     rootgrp = read_nc
# #     netCDF_var_time = rootgrp.variables['time']
# #     netCDF_var_time_data = netCDF_var_time[:].data
# #     error_msg = 'different amount of time variable data points in sample_data/sample.nc and sample_data/sample.csv'
# #     assert len(netCDF_var_time_data) == len(df.index), error_msg
# #     for index, nc_ts_float in enumerate(netCDF_var_time_data):
# #         # time in (csv) dataframe
# #         df_dt = df['datetime'][index]
# #         df_dt_str = df_dt.strftime("%Y-%m-%d %H:%M:%S")
# #         df_ts_float = df['timestamp'][index]
# #         df_ts_dt = datetime.datetime.fromtimestamp(df_ts_float,  tz=timezone.utc)
# #         df_ts_str = df_ts_dt.strftime("%Y-%m-%d %H:%M:%S")
# #         error_msg = f'The CSV value for datetime: {df_dt_str} and timestamp: {df_ts_str} do not match'
# #         assert df_dt_str == df_ts_str, error_msg
# #         # time in netCDF, using nc_ts_float and
# #         nc_cftime = num2date(nc_ts_float, units=netCDF_var_time.units)
# #         nc_cftime_str = nc_cftime.strftime("%Y-%m-%d %H:%M:%S")
# #         print(f'DT: {df_dt_str} SAME AS .nc: ({nc_ts_float} since {netCDF_var_time.units}) {nc_cftime_str}')
# #         error_msg = f'The CSV value for datetime: {df_dt_str} does not match netCDFs timestamp: {nc_cftime_str}'
# #         assert df_dt_str == nc_cftime_str, error_msg


# '''
# telegram.telegram_data
# {'01': '0000.102', '02': '0100.87', '03': '57', '04': '58', '05': '-RADZ', '06': ' RL-', '07': '10.681', '08': '19588', '09': '00060', '10': '21513', '11': '00059', '12': '006', '13': '450541', '14': '2.11.4', '15': '2.11.1', '16': '2.21', '17': '20.4', '18': '0', '19': ' ', '20': '00:01:00', '21': '06.11.2023', '22': 'PAR007', '23': '007', '24': '010.087', '25': '000', '26': '020', '27': '010', '28': '009', '30': '00.102', '31': '0000.2', '32': '0100.87', '33': '10.68', '34': '0000.41', '35': '0000.00', '60': '00000062', '90': '-9.999,-9.999,01.619,02.578,02.454,02.064,01.848,01.223,01.148,00.821,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999,-9.999', '91': '00.000,00.000,01.200,01.219,01.814,02.230,02.557,03.000,03.700,03.799,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000,00.000', '93': '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001004003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002003001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001006002001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004004002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001002001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001003002001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', 'datetime': Timestamp('2023-11-06 00:01:51'), 'timestamp': 1699225311.829183} # pylint: disable=line-too-long
# '''
